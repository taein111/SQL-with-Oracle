--서브 쿼리
SELECT ENAME, DEPTNO
FROM EMP
WHERE DEPTNO = (SELECT DEPTNO
                FROM EMP
                WHERE ENAME ='SCOTT'); 
                
--SCOTT과 같은 부서에서 근무하는 사원의 이름과 부서번호 출력 
SELECT ENAME, DEPTNO
FROM EMP
WHERE DEPTNO=(SELECT DEPTNO
FROM EMP
WHERE ENAME = 'SCOTT');

--SCOTT과 같은 부서인 사람의 정보 출력 
SELECT * FROM EMP
WHERE JOB = (SELECT JOB 
            FROM EMP
            WHERE ENAME='SCOTT');

--SCOTT 의 급여와 동일하거나 더 많이 받는 사원의 명과 급여 출력                     
SELECT ENAME, SAL
FROM EMP
WHERE SAL>=(SELECT SAL
        FROM EMP
        WHERE ENAME ='SCOTT');
        
--DALLAS에서 근무하는 사원의 이름, 부서번호 출력
SELECT ENAME, DEPTNO
FROM EMP
WHERE DEPTNO=(SELECT DEPTNO
        FROM DEPT
        WHERE LOC='DALLAS');
-- SALES 부서에서 근무하는 모든 사원의 이름과 급여 출력
SELECT ENAME, SAL
FROM EMP
WHERE DEPTNO =(
SELECT DEPTNO
FROM DEPT
WHERE DNAME='SALES');

--직속상관이 KING인 사원의 이름과 급여 출력
SELECT ENAME, SAL
FROM EMP
WHERE MGR = (
SELECT EMPNO
FROM EMP
WHERE ENAME='KING');

--서브쿼리에서 그룹 함수 사용                
SELECT ENAME, SAL
FROM EMP
WHERE SAL >(SELECT AVG(SAL)
FROM EMP);

--다중 행 서브쿼리
SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO IN(SELECT DEPTNO
FROM EMP
WHERE SAL >= 3000);

--부서별로 가장 급여를 많이 받는 사원의 정보
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE SAL IN(
SELECT MAX(SAL)
FROM EMP
GROUP BY DEPTNO);

-- 직급(JOB)이 MANAGER인 사람의 속한 부서의 부서번호와 부서명,지역 출력
SELECT DEPTNO, DNAME, LOC
FROM DEPT
WHERE DEPTNO IN(
SELECT DEPTNO
FROM EMP
WHERE JOB='MANAGER');

--ALL 연산자
SELECT ENAME, SAL
FROM EMP
WHERE SAL > ALL(SELECT SAL
                FROM EMP
                WHERE DEPTNO = 30);
--영업사원들보다 급여를 많이 받는 사원들의 이름,급여,직급(분석가 출력X)
SELECT ENAME, SAL, JOB
FROM EMP
WHERE SAL > ALL(SELECT SAL
FROM EMP
WHERE JOB='SALESMAN')
AND JOB <> 'ANALLYST';
                
-- ANY 연산자
SELECT ENAME, SAL
FROM EMP
WHERE SAL > ANY(SELECT SAL
                FROM EMP
                WHERE DEPTNO =30);
                
SELECT SAL FROM EMP WHERE DEPTNO = 30;

--영업사원들의 최소 급여보다 많이 받는 사원들의 이름, 급여, 직급 출력
SELECT ENAME, SAL, JOB
FROM EMP
WHERE SAL>ANY(
SELECT SAL
FROM EMP
WHERE JOB = 'SALESMAN')
AND JOB <>'SALESMAN';

--예제 1
SELECT ENAME, JOB,EMPNO
FROM EMP
WHERE JOB =
(SELECT JOB
FROM EMP
WHERE EMPNO ='7788');

SELECT ENAME,EMPNO, JOB, SAL
FROM EMP
WHERE SAL > (SELECT SAL
                FROM EMP
                WHERE EMPNO ='7499');
                
SELECT ENAME, JOB, SAL
FROM EMP
WHERE SAL IN(
SELECT MIN(SAL)
FROM EMP);

--4
SELECT JOB, ROUND(AVG(SAL),1)
FROM EMP
GROUP BY JOB
HAVING ROUND(AVG(SAL),1) =(
SELECT MIN(ROUND((AVG(SAL)),1))
FROM EMP
GROUP BY JOB);
          
--5    
SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE SAL IN(
SELECT MIN(SAL)
FROM EMP
GROUP BY DEPTNO);

--6
SELECT ENAME, EMPNO, JOB
FROM EMP
WHERE SAL < ANY(SELECT SAL
                FROM EMP
                WHERE JOB = 'ANALYST')
AND JOB <> 'SALESMAN';

--7 부하직원이 없는 사원? MGR 필드에 내 사번이 없어야함.
SELECT ENAME ,JOB
FROM EMP
WHERE EMPNO NOT IN(
SELECT MGR
FROM EMP
WHERE MGR IS NOT NULL);

--8
SELECT ENAME,JOB
FROM EMP
WHERE EMPNO IN(
SELECT MGR
FROM EMP
WHERE MGR IS NOT NULL);
--9
SELECT ENAME, HIREDATE
FROM EMP
WHERE DEPTNO =(SELECT DEPTNO
                FROM DEPT
                WHERE DNAME = 'SALES')
AND ENAME <> 'BLAKE';

--9 선생님 풀이
SELECT ENAME, HIREDATE
FROM EMP
WHERE DEPTNO =(SELECT DEPTNO
                FROM EMP
                WHERE ENAME = 'BLAKE');
--10
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL>(
SELECT AVG(SAL)
FROM EMP)
ORDER BY SAL ASC;
--11                
SELECT ENAME, EMPNO
FROM EMP
WHERE DEPTNO= ANY(SELECT DEPTNO
FROM EMP
WHERE ENAME LIKE '%K%');

--11번 선생님풀이
SELECT ENAME, EMPNO, DEPTNO
FROM EMP
WHERE DEPTNO IN(
SELECT DEPTNO
FROM EMP
WHERE ENAME LIKE '%K%');

--12
SELECT ENAME, DEPTNO, JOB
FROM EMP
WHERE DEPTNO IN(
SELECT DEPTNO
FROM DEPT
WHERE LOC = 'DALLAS');

--13
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE MGR =(
SELECT EMPNO
FROM EMP
WHERE ENAME ='KING');

--14
SELECT DEPTNO, ENAME, JOB
FROM EMP
WHERE DEPTNO=(
SELECT DEPTNO
FROM DEPT
WHERE DNAME ='RESEARCH');

--15
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE SAL > (SELECT AVG(SAL)
            FROM EMP)
AND DEPTNO IN(SELECT DEPTNO
            FROM EMP
            WHERE ENAME LIKE '%M%');


--16
SELECT JOB, AVG(SAL)
FROM EMP
GROUP BY JOB
HAVING AVG(SAL)=(
SELECT MIN(AVG(SAL))
FROM EMP
GROUP BY JOB);

--17
SELECT ENAME,JOB
FROM EMP
WHERE EMPNO IN(
SELECT MGR
FROM EMP
WHERE MGR IS NOT NULL)
AND JOB<> 'MANAGER';