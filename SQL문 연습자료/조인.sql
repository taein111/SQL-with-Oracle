-- 조인 학습
SELECT DEPTNO
FROM EMP
WHERE ENAME='SCOTT';
SELECT * FROM DEPT
WHERE DEPTNO=20;

--CROSS JOIN
SELECT *
FROM EMP, DEPT;

--EQUI JOIN
SELECT *
FROM EMP, DEPT
WHERE EMP.DEPTNO = dept.deptno;

--EQUI JOIN에 AND연산 하기
SELECT ENAME, DNAME
FROM EMP, DEPT
WHERE EMP.DEPTNO = dept.deptno
AND ENAME = 'SCOTT';

--컬럼명의 모호성 해결 
SELECT ENAME, DNAME, D.DEPTNO
FROM EMP E, DEPT D
WHERE E.DEPTNO = d.deptno
AND ENAME = 'SCOTT';

--EQUI JOIN 예제 1 , 2 , 3
--1. 뉴욕에서 근무하는 사원의 이름과 급여를  출력하시오 (조인 활용)
SELECT ENAME,SAL
FROM EMP E,DEPT D
WHERE E.DEPTNO = D.DEPTNO
AND LOC='NEWYORK';

--2. ACCOUNTING 부서 소속 사원의 이름과 입사일을 출력
SELECT ENAME, HIREDATE
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
AND DNAME='ACCOUNTING';

--3 직급이 MANAGER인 사원의 이름, 부서 명을 출력하시오
SELECT ENAME, DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
AND JOB = 'MANAGER';

--non equi join
SELECT * FROM SALGRADE;

--NON EQUI 조인은 = 로 비교가 안될때
SELECT ENAME, SAL, GRADE
FROM EMP, SALGRADE
WHERE SAL BETWEEN LOSAL AND HISAL;

--SEIF JOIN >> 자기 자신의 사본을 만들어서 조인
SELECT E2.EMPNO, E2.ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO
AND E1.ENAME='SMITH'; 

SELECT E1.ENAME, E1.JOB
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO
AND E2.ENAME = 'KING';

SELECT E1.ENAME, E2.ENAME
FROM EMP E1, EMP E2
WHERE E1.DEPTNO = E2.DEPTNO
AND E1.ENAME ='SOCTT';

--OUTER JOIN
SELECT E1.ENAME, E2.MGR "관리자 사번", E2.ENAME "관리자 이름"
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO(+);

SELECT E.ENAME || '의 매니저는' || M.ENAME||'입니다.'
FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO(+);

SELECT E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO;

--ANSI JOIN
SELECT * FROM EMP CROSS JOIN DEPT;

--ANSI INNER JOIN
SELECT ENAME, DNAME
FROM EMP INNER JOIN DEPT
ON EMP.DEPTNO = DEPT.DEPTNO
WHERE ENAME = 'SCOTT';

--USING을 이용한 조인 조건 지정( 동일 컬럼일때)
SELECT EMP.ENAME, DEPT.DNAME
FROM EMP INNER JOIN DEPT
USING(DEPTNO);

--ANSI NATURAL JOIN
SELECT EMP.ENAME, DEPT.DNAME
FROM EMP NATURAL JOIN DEPT;

--ANSI OUTER JOIN
DROP TABLE DEPT01;

CREATE TABLE DEPT01(
DEPTNO NUMBER(2),
DNAME VARCHAR(14));

INSERT INTO DEPT01 VALUES(10, 'ACCOUNTING');
INSERT INTO DEPT01 VALUES (20, 'RESEARCH'); 

DROP TABLE DEPT02;

CREATE TABLE DEPT02( 
DEPTNO NUMBER(2), 
DNAME VARCHAR2(14));

INSERT INTO DEPT02 VALUES(10, 'ACCOUNTING');
INSERT INTO DEPT02 VALUES (30, 'SALES'); 

SELECT * FROM DEPT02;

SELECT * FROM DEPT01 LEFT OUTER JOIN DEPT02
USING(DEPTNO);

SELECT * FROM DEPT01 FULL OUTER JOIN DEPT02
USING(DEPTNO);

SELECT * FROM DEPT01 RIGHT OUTER JOIN DEPT02
USING(DEPTNO);

--예제
--1
SELECT ENAME, EMP.DEPTNO, DNAME
FROM EMP, DEPT
WHERE EMP.DEPTNO = dept.deptno
AND ENAME = 'SCOTT';

--2
SELECT ENAME, DNAME, LOC
FROM EMP INNER JOIN DEPT
ON EMP.DEPTNO = DEPT.DEPTNO;

--3
SELECT DEPTNO, JOB, LOC
FROM EMP INNER JOIN DEPT
USING(DEPTNO)
WHERE DEPTNO=10;

--4
SELECT ENAME, DNAME, LOC
FROM EMP NATURAL JOIN DEPT 
WHERE COMM IS NOT NULL;

--5
SELECT ENAME, DNAME
FROM EMP E, DEPT D 
WHERE EMP.DEPTNO = DEPT.DEPTNO;0
--AND LIKE E.ENAME('%A%');

